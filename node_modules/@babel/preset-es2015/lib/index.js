"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _helperPluginUtils() {
  const data = require("@babel/helper-plugin-utils");

  _helperPluginUtils = function _helperPluginUtils() {
    return data;
  };

  return data;
}

function _pluginTransformTemplateLiterals() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-template-literals"));

  _pluginTransformTemplateLiterals = function _pluginTransformTemplateLiterals() {
    return data;
  };

  return data;
}

function _pluginTransformLiterals() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-literals"));

  _pluginTransformLiterals = function _pluginTransformLiterals() {
    return data;
  };

  return data;
}

function _pluginTransformFunctionName() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-function-name"));

  _pluginTransformFunctionName = function _pluginTransformFunctionName() {
    return data;
  };

  return data;
}

function _pluginTransformArrowFunctions() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-arrow-functions"));

  _pluginTransformArrowFunctions = function _pluginTransformArrowFunctions() {
    return data;
  };

  return data;
}

function _pluginTransformBlockScopedFunctions() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-block-scoped-functions"));

  _pluginTransformBlockScopedFunctions = function _pluginTransformBlockScopedFunctions() {
    return data;
  };

  return data;
}

function _pluginTransformClasses() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-classes"));

  _pluginTransformClasses = function _pluginTransformClasses() {
    return data;
  };

  return data;
}

function _pluginTransformObjectSuper() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-object-super"));

  _pluginTransformObjectSuper = function _pluginTransformObjectSuper() {
    return data;
  };

  return data;
}

function _pluginTransformShorthandProperties() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-shorthand-properties"));

  _pluginTransformShorthandProperties = function _pluginTransformShorthandProperties() {
    return data;
  };

  return data;
}

function _pluginTransformDuplicateKeys() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-duplicate-keys"));

  _pluginTransformDuplicateKeys = function _pluginTransformDuplicateKeys() {
    return data;
  };

  return data;
}

function _pluginTransformComputedProperties() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-computed-properties"));

  _pluginTransformComputedProperties = function _pluginTransformComputedProperties() {
    return data;
  };

  return data;
}

function _pluginTransformForOf() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-for-of"));

  _pluginTransformForOf = function _pluginTransformForOf() {
    return data;
  };

  return data;
}

function _pluginTransformStickyRegex() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-sticky-regex"));

  _pluginTransformStickyRegex = function _pluginTransformStickyRegex() {
    return data;
  };

  return data;
}

function _pluginTransformUnicodeRegex() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-unicode-regex"));

  _pluginTransformUnicodeRegex = function _pluginTransformUnicodeRegex() {
    return data;
  };

  return data;
}

function _pluginTransformSpread() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-spread"));

  _pluginTransformSpread = function _pluginTransformSpread() {
    return data;
  };

  return data;
}

function _pluginTransformParameters() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-parameters"));

  _pluginTransformParameters = function _pluginTransformParameters() {
    return data;
  };

  return data;
}

function _pluginTransformDestructuring() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-destructuring"));

  _pluginTransformDestructuring = function _pluginTransformDestructuring() {
    return data;
  };

  return data;
}

function _pluginTransformBlockScoping() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-block-scoping"));

  _pluginTransformBlockScoping = function _pluginTransformBlockScoping() {
    return data;
  };

  return data;
}

function _pluginTransformTypeofSymbol() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-typeof-symbol"));

  _pluginTransformTypeofSymbol = function _pluginTransformTypeofSymbol() {
    return data;
  };

  return data;
}

function _pluginTransformModulesCommonjs() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-modules-commonjs"));

  _pluginTransformModulesCommonjs = function _pluginTransformModulesCommonjs() {
    return data;
  };

  return data;
}

function _pluginTransformModulesSystemjs() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-modules-systemjs"));

  _pluginTransformModulesSystemjs = function _pluginTransformModulesSystemjs() {
    return data;
  };

  return data;
}

function _pluginTransformModulesAmd() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-modules-amd"));

  _pluginTransformModulesAmd = function _pluginTransformModulesAmd() {
    return data;
  };

  return data;
}

function _pluginTransformModulesUmd() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-modules-umd"));

  _pluginTransformModulesUmd = function _pluginTransformModulesUmd() {
    return data;
  };

  return data;
}

function _pluginTransformInstanceof() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-instanceof"));

  _pluginTransformInstanceof = function _pluginTransformInstanceof() {
    return data;
  };

  return data;
}

function _pluginTransformRegenerator() {
  const data = _interopRequireDefault(require("@babel/plugin-transform-regenerator"));

  _pluginTransformRegenerator = function _pluginTransformRegenerator() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _helperPluginUtils().declare)((api, opts) => {
  api.assertVersion(7);
  const moduleTypes = ["commonjs", "cjs", "amd", "umd", "systemjs"];
  let loose = false;
  let modules = "commonjs";
  let spec = false;

  if (opts !== undefined) {
    if (opts.loose !== undefined) loose = opts.loose;
    if (opts.modules !== undefined) modules = opts.modules;
    if (opts.spec !== undefined) spec = opts.spec;
  }

  if (typeof loose !== "boolean") {
    throw new Error("Preset es2015 'loose' option must be a boolean.");
  }

  if (typeof spec !== "boolean") {
    throw new Error("Preset es2015 'spec' option must be a boolean.");
  }

  if (modules !== false && moduleTypes.indexOf(modules) === -1) {
    throw new Error("Preset es2015 'modules' option must be 'false' to indicate no modules\n" + "or a module type which be be one of: 'commonjs' (default), 'amd', 'umd', 'systemjs'");
  }

  const optsLoose = {
    loose
  };
  return {
    plugins: [[_pluginTransformTemplateLiterals().default, {
      loose,
      spec
    }], _pluginTransformLiterals().default, _pluginTransformFunctionName().default, [_pluginTransformArrowFunctions().default, {
      spec
    }], _pluginTransformBlockScopedFunctions().default, [_pluginTransformClasses().default, optsLoose], _pluginTransformObjectSuper().default, _pluginTransformShorthandProperties().default, _pluginTransformDuplicateKeys().default, [_pluginTransformComputedProperties().default, optsLoose], [_pluginTransformForOf().default, optsLoose], _pluginTransformStickyRegex().default, _pluginTransformUnicodeRegex().default, [_pluginTransformSpread().default, optsLoose], [_pluginTransformParameters().default, optsLoose], [_pluginTransformDestructuring().default, optsLoose], _pluginTransformBlockScoping().default, _pluginTransformTypeofSymbol().default, _pluginTransformInstanceof().default, (modules === "commonjs" || modules === "cjs") && [_pluginTransformModulesCommonjs().default, optsLoose], modules === "systemjs" && [_pluginTransformModulesSystemjs().default, optsLoose], modules === "amd" && [_pluginTransformModulesAmd().default, optsLoose], modules === "umd" && [_pluginTransformModulesUmd().default, optsLoose], [_pluginTransformRegenerator().default, {
      async: false,
      asyncGenerators: false
    }]].filter(Boolean)
  };
});

exports.default = _default;